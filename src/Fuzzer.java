import java.awt.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.nio.file.*;
import java.util.Collections;
import java.util.Random;

public class Fuzzer {

    public static void main(String[] args) {

        /* Get the data from the line */
        File fileName = new File(args[0]);
        int numberTests = Integer.parseInt(args[1]);
        int maxNumberModif = Integer.parseInt(args[2]);
        double percentChange = Double.parseDouble(args[3]);

        /* Read the file */
        byte[] data = read_file(fileName);
        /* Printing all the data */
        print_data(data, numberTests, maxNumberModif, percentChange);


        for (int i = 0; i < numberTests; i++) {
            byte[] dataCopy = data;

            System.out.println("===== Test number : " + i + " =====");

            dataCopy = randomize_data(dataCopy, maxNumberModif, percentChange);

            String toWrite = new String(dataCopy, StandardCharsets.UTF_16LE);

            System.out.println("TOWRITE : " + toWrite);

            Path inputFile = Paths.get("testinput" + i + ".img");
            try {
                Files.write(inputFile, Collections.singleton(toWrite));
            } catch (IOException e) {
                e.printStackTrace();
            }
            /* Run the process */
            String resultOfTheRun = run_process(inputFile);
            System.out.println("RESULT : " + resultOfTheRun);
//            if (resultOfTheRun != null) {
//                if (!resultOfTheRun.equals("*** The program has crashed.")) {
//                    try {
//                        Files.delete(inputFile);
//                    } catch (NoSuchFileException x) {
//                        System.err.format("%s: no such" + " file or directory%n", inputFile);
//                    } catch (IOException e) {
//                        e.printStackTrace();
//                    }
//                }
//            }

        }
    }

    private static String bytesToHex(byte[] bytes) {

        StringBuilder sb = new StringBuilder();
        for (byte b : bytes) {
            sb.append(String.format("%02x", b));
        }
        System.out.println(sb.toString());
        return sb.toString();
    }

    private static byte[] randomize_data(byte[] dataCopy, int maxNumberModif, double percentChange) {
        int i = 1;
        double currentPercent = 0.0;
        /* Copies of the tab */
        byte[] temp = new byte[dataCopy.length-1];
        boolean[] booleanData = new boolean[dataCopy.length-1];

        while ((i <= maxNumberModif) || (currentPercent <= percentChange)) {

            /* Random between 6 and 95 */
            Random r = new Random();
            int low = 6;
            int high = 95;
            int indexToModify = r.nextInt(high-low) + low;

            System.out.println("INDEX : " + indexToModify);
            /* To not modify the same byte 2 or more time */
            while (booleanData[indexToModify]) {
                indexToModify = r.nextInt(high-low) + low;
            }

            r.nextBytes(temp);
            dataCopy[indexToModify] = temp[indexToModify];
            booleanData[indexToModify] = true;


            currentPercent = (double) i / (double) dataCopy.length;
            i++;
        }
        return dataCopy;
    }

    /**
     * Simply read the FIRST line of the result returned by the exec file.
     * @param inputFile the input file we give to the exec file.
     * @return the FIRST line of the result generated by the exec file.
     */
    private static String run_process(Path inputFile) {
        try {
            String line;
            Process p = Runtime.getRuntime().exec("./converter_static " + inputFile + " testoutput.img");
            BufferedReader bre = new BufferedReader(new InputStreamReader(p.getErrorStream()));
            if ((line = bre.readLine()) != null) {
                return line;
            }
            bre.close();
            p.waitFor();
        }
        catch (Exception err) {
            err.printStackTrace();
        }
        return null;
    }

    /**
     * Read a file.
     * @param file: the file to read on.
     * @return a byte array from the file.
     */
    public static byte[] read_file(File file) {
        byte[] data = new byte[0];
        try {
            data = Files.readAllBytes(file.toPath());
        } catch (IOException e) {
            e.printStackTrace();
        }
        return data;
    }

    /**
     * Printing the data given in argument.
     * @param data the tab of byte.
     * @param numberTests the number of tests to do.
     * @param maxNumberModif the maximum number of modif to do.
     * @param percentChange the max percent of random changes.
     */
    private static void print_data(byte[] data, int numberTests, int maxNumberModif, double percentChange) {
        System.out.println("Printing all the data : ");
        System.out.println("NbrTests : " + numberTests);
        System.out.println("MaxNumberOfTests : " + maxNumberModif);
        System.out.println("percentChange : " + percentChange);
        System.out.println("File Data : ");
        for (int i = 0; i < data.length; i++) {
            System.out.println("Data at : " + i + " : ");
            System.out.println(data[i]);
        }
        System.out.println("The data translated : ");
        String str = new String(data, StandardCharsets.UTF_8);
        System.out.println(str);
        System.out.println("----- End -----");
    }
}
